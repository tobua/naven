{"version":3,"file":"191.102880208143ed61.js","mappings":"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","sources":["webpack:///./node_modules/@codesandbox/sandpack-client/dist/chunk-BYXT5FFC.mjs","webpack:///./node_modules/@codesandbox/sandpack-client/dist/clients/runtime/index.mjs"],"sourcesContent":["// src/clients/base.ts\nimport isEqual from \"lodash.isequal\";\nvar SandpackClient = class {\n  constructor(iframeSelector, sandboxSetup, options = {}) {\n    this.options = options;\n    this.sandboxSetup = sandboxSetup;\n    this.iframeSelector = iframeSelector;\n  }\n  /**\n   * Clients handles\n   */\n  updateOptions(options) {\n    if (!isEqual(this.options, options)) {\n      this.options = options;\n      this.updateSandbox();\n    }\n  }\n  updateSandbox(_sandboxSetup = this.sandboxSetup, _isInitializationCompile) {\n    throw Error(\"Method not implemented\");\n  }\n  destroy() {\n    throw Error(\"Method not implemented\");\n  }\n  /**\n   * Bundler communication\n   */\n  dispatch(_message) {\n    throw Error(\"Method not implemented\");\n  }\n  listen(_listener) {\n    throw Error(\"Method not implemented\");\n  }\n};\n\nexport {\n  SandpackClient\n};\n//# sourceMappingURL=chunk-BYXT5FFC.mjs.map\n","import {\n  SandpackClient\n} from \"../../chunk-BYXT5FFC.mjs\";\nimport {\n  addPackageJSONIfNeeded,\n  createError,\n  createPackageJSON,\n  extractErrorDetails,\n  nullthrows\n} from \"../../chunk-TYCKDFJV.mjs\";\n\n// src/clients/runtime/index.ts\nimport isEqual from \"lodash.isequal\";\n\n// src/clients/runtime/file-resolver-protocol.ts\nvar Protocol = class {\n  constructor(type, handleMessage, protocol) {\n    this.type = type;\n    this.handleMessage = handleMessage;\n    this.protocol = protocol;\n    this._disposeMessageListener = this.protocol.channelListen(\n      async (msg) => {\n        if (msg.type === this.getTypeId() && msg.method) {\n          const message = msg;\n          try {\n            const result = await this.handleMessage(message);\n            const response = {\n              type: this.getTypeId(),\n              msgId: message.msgId,\n              result\n            };\n            this.protocol.dispatch(response);\n          } catch (err) {\n            const response = {\n              type: this.getTypeId(),\n              msgId: message.msgId,\n              error: {\n                message: err.message\n              }\n            };\n            this.protocol.dispatch(response);\n          }\n        }\n      }\n    );\n  }\n  getTypeId() {\n    return `protocol-${this.type}`;\n  }\n  dispose() {\n    this._disposeMessageListener();\n  }\n};\n\n// src/clients/runtime/iframe-protocol.ts\nvar IFrameProtocol = class {\n  constructor(iframe, origin) {\n    // React to messages from any iframe\n    this.globalListeners = {};\n    this.globalListenersCount = 0;\n    // React to messages from the iframe owned by this instance\n    this.channelListeners = {};\n    this.channelListenersCount = 0;\n    // Random number to identify this instance of the client when messages are coming from multiple iframes\n    this.channelId = Math.floor(Math.random() * 1e6);\n    this.frameWindow = iframe.contentWindow;\n    this.origin = origin;\n    this.globalListeners = [];\n    this.channelListeners = [];\n    this.eventListener = this.eventListener.bind(this);\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"message\", this.eventListener);\n    }\n  }\n  cleanup() {\n    window.removeEventListener(\"message\", this.eventListener);\n    this.globalListeners = {};\n    this.channelListeners = {};\n    this.globalListenersCount = 0;\n    this.channelListenersCount = 0;\n  }\n  // Sends the channelId and triggers an iframeHandshake promise to resolve,\n  // so the iframe can start listening for messages (based on the id)\n  register() {\n    if (!this.frameWindow) {\n      return;\n    }\n    this.frameWindow.postMessage(\n      {\n        type: \"register-frame\",\n        origin: document.location.origin,\n        id: this.channelId\n      },\n      this.origin\n    );\n  }\n  // Messages are dispatched from the client directly to the instance iframe\n  dispatch(message) {\n    if (!this.frameWindow) {\n      return;\n    }\n    this.frameWindow.postMessage(\n      {\n        $id: this.channelId,\n        codesandbox: true,\n        ...message\n      },\n      this.origin\n    );\n  }\n  // Add a listener that is called on any message coming from an iframe in the page\n  // This is needed for the `initialize` message which comes without a channelId\n  globalListen(listener) {\n    if (typeof listener !== \"function\") {\n      return () => {\n        return;\n      };\n    }\n    const listenerId = this.globalListenersCount;\n    this.globalListeners[listenerId] = listener;\n    this.globalListenersCount++;\n    return () => {\n      delete this.globalListeners[listenerId];\n    };\n  }\n  // Add a listener that is called on any message coming from an iframe with the instance channelId\n  // All other messages (eg: from other iframes) are ignored\n  channelListen(listener) {\n    if (typeof listener !== \"function\") {\n      return () => {\n        return;\n      };\n    }\n    const listenerId = this.channelListenersCount;\n    this.channelListeners[listenerId] = listener;\n    this.channelListenersCount++;\n    return () => {\n      delete this.channelListeners[listenerId];\n    };\n  }\n  // Handles message windows coming from iframes\n  eventListener(evt) {\n    if (evt.source !== this.frameWindow) {\n      return;\n    }\n    const message = evt.data;\n    if (!message.codesandbox) {\n      return;\n    }\n    Object.values(this.globalListeners).forEach(\n      (listener) => listener(message)\n    );\n    if (message.$id !== this.channelId) {\n      return;\n    }\n    Object.values(this.channelListeners).forEach(\n      (listener) => listener(message)\n    );\n  }\n};\n\n// src/clients/runtime/utils.ts\nvar MAX_CLIENT_DEPENDENCY_COUNT = 50;\nfunction getTemplate(pkg, modules) {\n  if (!pkg) {\n    return \"static\";\n  }\n  const { dependencies = {}, devDependencies = {} } = pkg;\n  const totalDependencies = [\n    ...Object.keys(dependencies),\n    ...Object.keys(devDependencies)\n  ];\n  const moduleNames = Object.keys(modules);\n  const adonis = [\"@adonisjs/framework\", \"@adonisjs/core\"];\n  if (totalDependencies.some((dep) => adonis.indexOf(dep) > -1)) {\n    return \"adonis\";\n  }\n  const nuxt = [\"nuxt\", \"nuxt-edge\", \"nuxt-ts\", \"nuxt-ts-edge\", \"nuxt3\"];\n  if (totalDependencies.some((dep) => nuxt.indexOf(dep) > -1)) {\n    return \"nuxt\";\n  }\n  if (totalDependencies.indexOf(\"next\") > -1) {\n    return \"next\";\n  }\n  const apollo = [\n    \"apollo-server\",\n    \"apollo-server-express\",\n    \"apollo-server-hapi\",\n    \"apollo-server-koa\",\n    \"apollo-server-lambda\",\n    \"apollo-server-micro\"\n  ];\n  if (totalDependencies.some((dep) => apollo.indexOf(dep) > -1)) {\n    return \"apollo\";\n  }\n  if (totalDependencies.indexOf(\"mdx-deck\") > -1) {\n    return \"mdx-deck\";\n  }\n  if (totalDependencies.indexOf(\"gridsome\") > -1) {\n    return \"gridsome\";\n  }\n  if (totalDependencies.indexOf(\"vuepress\") > -1) {\n    return \"vuepress\";\n  }\n  if (totalDependencies.indexOf(\"ember-cli\") > -1) {\n    return \"ember\";\n  }\n  if (totalDependencies.indexOf(\"sapper\") > -1) {\n    return \"sapper\";\n  }\n  if (totalDependencies.indexOf(\"gatsby\") > -1) {\n    return \"gatsby\";\n  }\n  if (totalDependencies.indexOf(\"quasar\") > -1) {\n    return \"quasar\";\n  }\n  if (totalDependencies.indexOf(\"@docusaurus/core\") > -1) {\n    return \"docusaurus\";\n  }\n  if (totalDependencies.indexOf(\"remix\") > -1) {\n    return \"remix\";\n  }\n  if (totalDependencies.indexOf(\"astro\") > -1) {\n    return \"node\";\n  }\n  if (moduleNames.some((m) => m.endsWith(\".re\"))) {\n    return \"reason\";\n  }\n  const parcel = [\"parcel-bundler\", \"parcel\"];\n  if (totalDependencies.some((dep) => parcel.indexOf(dep) > -1)) {\n    return \"parcel\";\n  }\n  const dojo = [\"@dojo/core\", \"@dojo/framework\"];\n  if (totalDependencies.some((dep) => dojo.indexOf(dep) > -1)) {\n    return \"@dojo/cli-create-app\";\n  }\n  if (totalDependencies.indexOf(\"@nestjs/core\") > -1 || totalDependencies.indexOf(\"@nestjs/common\") > -1) {\n    return \"nest\";\n  }\n  if (totalDependencies.indexOf(\"react-styleguidist\") > -1) {\n    return \"styleguidist\";\n  }\n  if (totalDependencies.indexOf(\"react-scripts\") > -1) {\n    return \"create-react-app\";\n  }\n  if (totalDependencies.indexOf(\"react-scripts-ts\") > -1) {\n    return \"create-react-app-typescript\";\n  }\n  if (totalDependencies.indexOf(\"@angular/core\") > -1) {\n    return \"angular-cli\";\n  }\n  if (totalDependencies.indexOf(\"preact-cli\") > -1) {\n    return \"preact-cli\";\n  }\n  if (totalDependencies.indexOf(\"@sveltech/routify\") > -1 || totalDependencies.indexOf(\"@roxi/routify\") > -1) {\n    return \"node\";\n  }\n  if (totalDependencies.indexOf(\"vite\") > -1) {\n    return \"node\";\n  }\n  if (totalDependencies.indexOf(\"@frontity/core\") > -1) {\n    return \"node\";\n  }\n  if (totalDependencies.indexOf(\"svelte\") > -1) {\n    return \"svelte\";\n  }\n  if (totalDependencies.indexOf(\"vue\") > -1) {\n    return \"vue-cli\";\n  }\n  if (totalDependencies.indexOf(\"cx\") > -1) {\n    return \"cxjs\";\n  }\n  const nodeDeps = [\n    \"express\",\n    \"koa\",\n    \"nodemon\",\n    \"ts-node\",\n    \"@tensorflow/tfjs-node\",\n    \"webpack-dev-server\",\n    \"snowpack\"\n  ];\n  if (totalDependencies.some((dep) => nodeDeps.indexOf(dep) > -1)) {\n    return \"node\";\n  }\n  if (Object.keys(dependencies).length >= MAX_CLIENT_DEPENDENCY_COUNT) {\n    return \"node\";\n  }\n  return void 0;\n}\n\n// src/clients/runtime/index.ts\nvar BUNDLER_URL = false ? \"http://localhost:3000/\" : `https://${\"2.0.11\" == null ? void 0 : \"2.0.11\".replace(\n  /\\./g,\n  \"-\"\n)}-sandpack.codesandbox.io/`;\nvar SandpackRuntime = class extends SandpackClient {\n  constructor(selector, sandboxSetup, options = {}) {\n    super(selector, sandboxSetup, options);\n    this.getTranspilerContext = () => new Promise((resolve) => {\n      const unsubscribe = this.listen((message) => {\n        if (message.type === \"transpiler-context\") {\n          resolve(message.data);\n          unsubscribe();\n        }\n      });\n      this.dispatch({ type: \"get-transpiler-context\" });\n    });\n    this.bundlerURL = options.bundlerURL || BUNDLER_URL;\n    this.bundlerState = void 0;\n    this.errors = [];\n    this.status = \"initializing\";\n    if (typeof selector === \"string\") {\n      this.selector = selector;\n      const element = document.querySelector(selector);\n      nullthrows(element, `The element '${selector}' was not found`);\n      this.element = element;\n      this.iframe = document.createElement(\"iframe\");\n      this.initializeElement();\n    } else {\n      this.element = selector;\n      this.iframe = selector;\n    }\n    if (!this.iframe.getAttribute(\"sandbox\")) {\n      this.iframe.setAttribute(\n        \"sandbox\",\n        \"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n      );\n      this.iframe.setAttribute(\n        \"allow\",\n        \"accelerometer; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi;\"\n      );\n    }\n    this.setLocationURLIntoIFrame();\n    this.iframeProtocol = new IFrameProtocol(this.iframe, this.bundlerURL);\n    this.unsubscribeGlobalListener = this.iframeProtocol.globalListen(\n      (mes) => {\n        if (mes.type !== \"initialized\" || !this.iframe.contentWindow) {\n          return;\n        }\n        this.iframeProtocol.register();\n        if (this.options.fileResolver) {\n          this.fileResolverProtocol = new Protocol(\n            \"fs\",\n            async (data) => {\n              if (data.method === \"isFile\") {\n                return this.options.fileResolver.isFile(data.params[0]);\n              } else if (data.method === \"readFile\") {\n                return this.options.fileResolver.readFile(data.params[0]);\n              } else {\n                throw new Error(\"Method not supported\");\n              }\n            },\n            this.iframeProtocol\n          );\n        }\n        this.updateSandbox(this.sandboxSetup, true);\n      }\n    );\n    this.unsubscribeChannelListener = this.iframeProtocol.channelListen(\n      (mes) => {\n        switch (mes.type) {\n          case \"start\": {\n            this.errors = [];\n            break;\n          }\n          case \"status\": {\n            this.status = mes.status;\n            break;\n          }\n          case \"action\": {\n            if (mes.action === \"show-error\") {\n              this.errors = [...this.errors, extractErrorDetails(mes)];\n            }\n            break;\n          }\n          case \"state\": {\n            this.bundlerState = mes.state;\n            break;\n          }\n        }\n      }\n    );\n  }\n  setLocationURLIntoIFrame() {\n    var _a;\n    const urlSource = this.options.startRoute ? new URL(this.options.startRoute, this.bundlerURL).toString() : this.bundlerURL;\n    (_a = this.iframe.contentWindow) == null ? void 0 : _a.location.replace(urlSource);\n    this.iframe.src = urlSource;\n  }\n  destroy() {\n    this.unsubscribeChannelListener();\n    this.unsubscribeGlobalListener();\n    this.iframeProtocol.cleanup();\n  }\n  updateOptions(options) {\n    if (!isEqual(this.options, options)) {\n      this.options = options;\n      this.updateSandbox();\n    }\n  }\n  updateSandbox(sandboxSetup = this.sandboxSetup, isInitializationCompile) {\n    var _a, _b, _c, _d;\n    this.sandboxSetup = {\n      ...this.sandboxSetup,\n      ...sandboxSetup\n    };\n    const files = this.getFiles();\n    const modules = Object.keys(files).reduce(\n      (prev, next) => ({\n        ...prev,\n        [next]: {\n          code: files[next].code,\n          path: next\n        }\n      }),\n      {}\n    );\n    let packageJSON = JSON.parse(\n      createPackageJSON(\n        this.sandboxSetup.dependencies,\n        this.sandboxSetup.devDependencies,\n        this.sandboxSetup.entry\n      )\n    );\n    try {\n      packageJSON = JSON.parse(files[\"/package.json\"].code);\n    } catch (e) {\n      console.error(\n        createError(\n          \"could not parse package.json file: \" + e.message\n        )\n      );\n    }\n    const normalizedModules = Object.keys(files).reduce(\n      (prev, next) => ({\n        ...prev,\n        [next]: {\n          content: files[next].code,\n          path: next\n        }\n      }),\n      {}\n    );\n    this.dispatch({\n      type: \"compile\",\n      codesandbox: true,\n      version: 3,\n      isInitializationCompile,\n      modules,\n      reactDevTools: this.options.reactDevTools,\n      externalResources: this.options.externalResources || [],\n      hasFileResolver: Boolean(this.options.fileResolver),\n      disableDependencyPreprocessing: this.sandboxSetup.disableDependencyPreprocessing,\n      template: this.sandboxSetup.template || getTemplate(packageJSON, normalizedModules),\n      showOpenInCodeSandbox: (_a = this.options.showOpenInCodeSandbox) != null ? _a : true,\n      showErrorScreen: (_b = this.options.showErrorScreen) != null ? _b : true,\n      showLoadingScreen: (_c = this.options.showLoadingScreen) != null ? _c : true,\n      skipEval: this.options.skipEval || false,\n      clearConsoleDisabled: !this.options.clearConsoleOnFirstCompile,\n      logLevel: (_d = this.options.logLevel) != null ? _d : 30 /* Info */,\n      customNpmRegistries: this.options.customNpmRegistries\n    });\n  }\n  dispatch(message) {\n    if (message.type === \"refresh\") {\n      this.setLocationURLIntoIFrame();\n    }\n    this.iframeProtocol.dispatch(message);\n  }\n  listen(listener) {\n    return this.iframeProtocol.channelListen(listener);\n  }\n  /**\n   * Get the URL of the contents of the current sandbox\n   */\n  getCodeSandboxURL() {\n    const files = this.getFiles();\n    const paramFiles = Object.keys(files).reduce(\n      (prev, next) => ({\n        ...prev,\n        [next.replace(\"/\", \"\")]: {\n          content: files[next].code,\n          isBinary: false\n        }\n      }),\n      {}\n    );\n    return fetch(\"https://codesandbox.io/api/v1/sandboxes/define?json=1\", {\n      method: \"POST\",\n      body: JSON.stringify({ files: paramFiles }),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then((x) => x.json()).then((res) => ({\n      sandboxId: res.sandbox_id,\n      editorUrl: `https://codesandbox.io/s/${res.sandbox_id}`,\n      embedUrl: `https://codesandbox.io/embed/${res.sandbox_id}`\n    }));\n  }\n  getFiles() {\n    const { sandboxSetup } = this;\n    if (sandboxSetup.files[\"/package.json\"] === void 0) {\n      return addPackageJSONIfNeeded(\n        sandboxSetup.files,\n        sandboxSetup.dependencies,\n        sandboxSetup.devDependencies,\n        sandboxSetup.entry\n      );\n    }\n    return this.sandboxSetup.files;\n  }\n  initializeElement() {\n    this.iframe.style.border = \"0\";\n    this.iframe.style.width = this.options.width || \"100%\";\n    this.iframe.style.height = this.options.height || \"100%\";\n    this.iframe.style.overflow = \"hidden\";\n    nullthrows(\n      this.element.parentNode,\n      \"The given iframe does not have a parent.\"\n    );\n    this.element.parentNode.replaceChild(this.iframe, this.element);\n  }\n};\nexport {\n  SandpackRuntime\n};\n//# sourceMappingURL=index.mjs.map\n"],"names":["SandpackClient","constructor","iframeSelector","sandboxSetup","options","this","updateOptions","updateSandbox","_sandboxSetup","_isInitializationCompile","Error","destroy","dispatch","_message","listen","_listener","MAX_CLIENT_DEPENDENCY_COUNT","getTemplate","pkg","modules","dependencies","devDependencies","totalDependencies","Object","keys","moduleNames","adonis","some","dep","indexOf","nuxt","apollo","m","endsWith","parcel","dojo","nodeDeps","length","BUNDLER_URL","replace","SandpackRuntime","selector","super","getTranspilerContext","Promise","resolve","unsubscribe","message","type","data","bundlerURL","bundlerState","errors","status","element","document","querySelector","iframe","createElement","initializeElement","getAttribute","setAttribute","setLocationURLIntoIFrame","iframeProtocol","origin","globalListeners","globalListenersCount","channelListeners","channelListenersCount","channelId","Math","floor","random","frameWindow","contentWindow","eventListener","bind","window","addEventListener","cleanup","removeEventListener","register","postMessage","location","id","$id","codesandbox","globalListen","listener","listenerId","channelListen","evt","source","values","forEach","unsubscribeGlobalListener","mes","fileResolver","fileResolverProtocol","handleMessage","protocol","_disposeMessageListener","async","msg","getTypeId","method","result","response","msgId","err","error","dispose","isFile","params","readFile","unsubscribeChannelListener","action","state","_a","urlSource","startRoute","URL","toString","src","isInitializationCompile","_b","_c","_d","files","getFiles","reduce","prev","next","code","path","packageJSON","JSON","parse","entry","e","console","normalizedModules","content","version","reactDevTools","externalResources","hasFileResolver","Boolean","disableDependencyPreprocessing","template","showOpenInCodeSandbox","showErrorScreen","showLoadingScreen","skipEval","clearConsoleDisabled","clearConsoleOnFirstCompile","logLevel","customNpmRegistries","getCodeSandboxURL","paramFiles","isBinary","fetch","body","stringify","headers","Accept","then","x","json","res","sandboxId","sandbox_id","editorUrl","embedUrl","style","border","width","height","overflow","parentNode","replaceChild"],"sourceRoot":""}