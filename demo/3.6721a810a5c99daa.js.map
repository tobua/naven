{"version":3,"file":"3.6721a810a5c99daa.js","sources":["../node_modules/@codesandbox/sandpack-client/dist/client.utils-7a723432.mjs"],"sourcesContent":["import { invariant } from 'outvariant';\nimport { c as createError } from './types-36e5ec0d.mjs';\n\nvar EventEmitter = /** @class */ (function () {\n    function EventEmitter() {\n        this.listeners = {};\n        this.listenersCount = 0;\n        this.channelId = Math.floor(Math.random() * 1000000);\n        this.listeners = [];\n    }\n    EventEmitter.prototype.cleanup = function () {\n        this.listeners = {};\n        this.listenersCount = 0;\n    };\n    EventEmitter.prototype.dispatch = function (message) {\n        Object.values(this.listeners).forEach(function (listener) { return listener(message); });\n    };\n    EventEmitter.prototype.listener = function (listener) {\n        var _this = this;\n        if (typeof listener !== \"function\") {\n            return function () {\n                return;\n            };\n        }\n        var listenerId = this.listenersCount;\n        this.listeners[listenerId] = listener;\n        this.listenersCount++;\n        return function () {\n            delete _this.listeners[listenerId];\n        };\n    };\n    return EventEmitter;\n}());\n\nfunction isCommand(char) {\n    return /[a-zA-Z.]/.test(char);\n}\nfunction isAlpha(char) {\n    return /[a-zA-Z]/.test(char);\n}\nfunction isWhitespace(char) {\n    return /\\s/.test(char);\n}\nfunction isOperator(char) {\n    return /[&|]/.test(char);\n}\nfunction isArgument(char) {\n    return /-/.test(char);\n}\nfunction isString(char) {\n    return /[\"']/.test(char);\n}\nfunction isEnvVar(char) {\n    return isAlpha(char) && char === char.toUpperCase();\n}\nvar TokenType;\n(function (TokenType) {\n    TokenType[\"OR\"] = \"OR\";\n    TokenType[\"AND\"] = \"AND\";\n    TokenType[\"PIPE\"] = \"PIPE\";\n    TokenType[\"Command\"] = \"Command\";\n    TokenType[\"Argument\"] = \"Argument\";\n    TokenType[\"String\"] = \"String\";\n    TokenType[\"EnvVar\"] = \"EnvVar\";\n})(TokenType || (TokenType = {}));\nvar operators = new Map([\n    [\"&&\", { type: TokenType.AND }],\n    [\"||\", { type: TokenType.OR }],\n    [\"|\", { type: TokenType.PIPE }],\n    [\"-\", { type: TokenType.Argument }],\n]);\nfunction tokenize(input) {\n    var current = 0;\n    var tokens = [];\n    function parseCommand() {\n        var value = \"\";\n        while (isCommand(input[current]) && current < input.length) {\n            value += input[current];\n            current++;\n        }\n        return { type: TokenType.Command, value: value };\n    }\n    function parseOperator() {\n        var value = \"\";\n        while (isOperator(input[current]) && current < input.length) {\n            value += input[current];\n            current++;\n        }\n        return operators.get(value);\n    }\n    function parseArgument() {\n        var value = \"\";\n        while ((isArgument(input[current]) || isAlpha(input[current])) &&\n            current < input.length) {\n            value += input[current];\n            current++;\n        }\n        return { type: TokenType.Argument, value: value };\n    }\n    function parseString() {\n        var openCloseQuote = input[current];\n        var value = input[current];\n        current++;\n        while (input[current] !== openCloseQuote && current < input.length) {\n            value += input[current];\n            current++;\n        }\n        value += input[current];\n        current++;\n        return { type: TokenType.String, value: value };\n    }\n    function parseEnvVars() {\n        var value = {};\n        var parseSingleEnv = function () {\n            var key = \"\";\n            var pair = \"\";\n            while (input[current] !== \"=\" && current < input.length) {\n                key += input[current];\n                current++;\n            }\n            // Skip equal\n            if (input[current] === \"=\") {\n                current++;\n            }\n            while (input[current] !== \" \" && current < input.length) {\n                pair += input[current];\n                current++;\n            }\n            value[key] = pair;\n        };\n        while (isEnvVar(input[current]) && current < input.length) {\n            parseSingleEnv();\n            current++;\n        }\n        return { type: TokenType.EnvVar, value: value };\n    }\n    while (current < input.length) {\n        var currentChar = input[current];\n        if (isWhitespace(currentChar)) {\n            current++;\n            continue;\n        }\n        switch (true) {\n            case isEnvVar(currentChar):\n                tokens.push(parseEnvVars());\n                break;\n            case isCommand(currentChar):\n                tokens.push(parseCommand());\n                break;\n            case isOperator(currentChar):\n                tokens.push(parseOperator());\n                break;\n            case isArgument(currentChar):\n                tokens.push(parseArgument());\n                break;\n            case isString(currentChar):\n                tokens.push(parseString());\n                break;\n            default:\n                throw new Error(\"Unknown character: \" + currentChar);\n        }\n    }\n    return tokens;\n}\n\nvar counter = 0;\nfunction generateRandomId() {\n    var now = Date.now();\n    var randomNumber = Math.round(Math.random() * 10000);\n    var count = (counter += 1);\n    return (+(\"\" + now + randomNumber + count)).toString(16);\n}\nvar writeBuffer = function (content) {\n    if (typeof content === \"string\") {\n        return new TextEncoder().encode(content);\n    }\n    else {\n        return content;\n    }\n};\nvar readBuffer = function (content) {\n    if (typeof content === \"string\") {\n        return content;\n    }\n    else {\n        return new TextDecoder().decode(content);\n    }\n};\nvar fromBundlerFilesToFS = function (files) {\n    return Object.entries(files).reduce(function (acc, _a) {\n        var key = _a[0], value = _a[1];\n        acc[key] = writeBuffer(value.code);\n        return acc;\n    }, {});\n};\n/**\n * Figure out which script it must run to start a server\n */\nvar findStartScriptPackageJson = function (packageJson) {\n    var scripts = {};\n    // TODO: support postinstall\n    var possibleKeys = [\"dev\", \"start\"];\n    try {\n        scripts = JSON.parse(packageJson).scripts;\n    }\n    catch (e) {\n        throw createError(\"Could not parse package.json file: \" + e.message);\n    }\n    invariant(scripts, \"Failed to start. Please provide a `start` or `dev` script on the package.json\");\n    var _loop_1 = function (index) {\n        if (possibleKeys[index] in scripts) {\n            var script = possibleKeys[index];\n            var candidate = scripts[script];\n            var env_1 = {};\n            var command_1 = \"\";\n            var args_1 = [];\n            tokenize(candidate).forEach(function (item) {\n                var commandNotFoundYet = command_1 === \"\";\n                if (item.type === TokenType.EnvVar) {\n                    env_1 = item.value;\n                }\n                if (item.type === TokenType.Command && commandNotFoundYet) {\n                    command_1 = item.value;\n                }\n                if (item.type === TokenType.Argument ||\n                    (!commandNotFoundYet && item.type === TokenType.Command)) {\n                    args_1.push(item.value);\n                }\n                // TODO: support TokenType.AND, TokenType.OR, TokenType.PIPE\n            });\n            return { value: [command_1, args_1, { env: env_1 }] };\n        }\n    };\n    for (var index = 0; index < possibleKeys.length; index++) {\n        var state_1 = _loop_1(index);\n        if (typeof state_1 === \"object\")\n            return state_1.value;\n    }\n    throw createError(\"Failed to start. Please provide a `start` or `dev` script on the package.json\");\n};\nvar getMessageFromError = function (error) {\n    if (typeof error === \"string\")\n        return error;\n    if (typeof error === \"object\" && \"message\" in error) {\n        return error.message;\n    }\n    return createError(\"The server could not be reached. Make sure that the node script is running and that a port has been started.\");\n};\n\nexport { EventEmitter as E, getMessageFromError as a, findStartScriptPackageJson as b, fromBundlerFilesToFS as f, generateRandomId as g, readBuffer as r, writeBuffer as w };\n"],"names":["E","EventEmitter","a","getMessageFromError","b","findStartScriptPackageJson","f","fromBundlerFilesToFS","g","generateRandomId","r","readBuffer","w","writeBuffer","TokenType","listeners","listenersCount","channelId","Math","floor","random","prototype","cleanup","dispatch","message","Object","values","forEach","listener","_this","listenerId","isCommand","char","test","isAlpha","isOperator","isArgument","isEnvVar","toUpperCase","operators","Map","type","AND","OR","PIPE","Argument","counter","now","Date","round","toString","content","TextEncoder","encode","TextDecoder","decode","files","entries","reduce","acc","_a","key","value","code","packageJson","scripts","possibleKeys","JSON","parse","e","c","invariant","index","length","state_1","_loop_1","candidate","env_1","command_1","args_1","tokenize","input","current","tokens","currentChar","push","parseEnvVars","parseSingleEnv","pair","EnvVar","parseCommand","Command","parseOperator","get","parseArgument","parseString","openCloseQuote","String","Error","item","commandNotFoundYet","env","error"],"mappings":"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"}